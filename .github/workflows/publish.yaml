name: Publish
on:
  pull_request:
    types: [ closed ]
    branches:
      - development
      - main
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 20 ]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: "Version and publish" # Interesting step
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run:
          - git config user.name "${{ github.actor }}"
          - git config user.email "${{ github.actor}}@users.noreply.github.com"
          - npx lerna version --conventional-commits --conventional-graduate --yes
          - npx lerna publish from-git --yes
#  publishold:
#    if: github.event.pull_request.merged == true
#    runs-on: ubuntu-latest
#    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: "Use NodeJS 20"
#        uses: actions/setup-node@v2
#        with:
#          node-version: '20'
#
#      - name: "Version and publish" # Interesting step
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#        run:
#          - git config user.name "${{ github.actor }}"
#          - git config user.email "${{ github.actor}}@users.noreply.github.com"
#          - npx lerna version --conventional-commits --conventional-graduate --yes
#          - npx lerna publish from-git --yes